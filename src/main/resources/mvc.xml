<beans 	xmlns="http://www.springframework.org/schema/beans"
          xmlns:context="http://www.springframework.org/schema/context"
          xmlns:aop="http://www.springframework.org/schema/aop"
          xmlns:mvc="http://www.springframework.org/schema/mvc"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans.xsd
							http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context.xsd
							http://www.springframework.org/schema/mvc
							http://www.springframework.org/schema/mvc/spring-mvc.xsd
                            http://www.springframework.org/schema/aop
							http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 告知SpringMVC  只扫描被@Controller注解的类-->
    <context:component-scan base-package="com.rj" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <mvc:annotation-driven/>
    <!--&lt;!&ndash; 注册注解开发驱动，使用fastJson &ndash;&gt;-->
    <!--<mvc:annotation-driven>-->
        <!--<mvc:message-converters>-->
            <!--<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">-->
                <!--<property name="supportedMediaTypes">-->
                    <!--<list>-->
                        <!--<value>application/json</value>-->
                    <!--</list>-->
                <!--</property>-->
            <!--</bean>-->
        <!--</mvc:message-converters>-->
    <!--</mvc:annotation-driven>-->

    <!-- 视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--处理静态资源，并交给tomcat的defaultServlet-->
    <mvc:default-servlet-handler/>

    <!--声明异常解析器-->
    <bean class="com.rj.ExceptionResolver.MyResolver"/>

    <!-- 上传解析器 id必须是：“multipartResolver”-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 最大可上传的文件大小   byte 超出后会抛出MaxUploadSizeExceededException异常，可以异常解析器捕获 -->
        <property name="maxUploadSize" value="209715200000"></property>
    </bean>

    <!--&lt;!&ndash;声明拦截器&ndash;&gt;-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/user/regist"/>
            <bean class="com.rj.interceptor.FileInterceptor">
                <property name="fileSize" value="500000"/>
            </bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/user/index"/>
            <bean class="com.rj.interceptor.AutoInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--配置shiro的注解-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- springMVC工厂启动时，如果发现了此配置，会在当前工厂中 多创建一个Bean(后处理器)，用来定制代理 -->
    <aop:config/>
    <!--初始化了一些额外功能和piontcut-->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>